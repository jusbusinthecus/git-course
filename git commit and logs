PRACTICE at home!

# this will be done from gitbash, make sure you're in the proper directory

git status (while in directory) should always be run first because this lets you know what git is tracking and not tracking.

# currently in gitone folder 
touch testone.txt testtwo.txt

git status - should give an error of untracked files. AKA git is not tracking these files
# the concept is that you write some code, you add that code in the "git tracking zone" , then you commit or save the changes.

# make the files trackable
git add testone.txt

# now check the status, this file is now in a so called "staging area"
git status

# now we commit, also important to note that the syntax needs to include -m <"description">
git commit -m "add file one"

# running git status now will not showing the file thats being tracked.


# do the samething for testtwo.txt and create a testthree.txt

# using git log
git log - will display commit id of all commits

git log --oneline - produces less verbosity.
